//
// Created by HORIA on 29.12.2023.
//

#ifndef MALWARE_TYPES_OOP_COMPUTER_H
#define MALWARE_TYPES_OOP_COMPUTER_H

#include "MalwareTypes.h"
#include "Malware.h"
#include <list>
#include <vector>
#include <string>
#include <ostream>
#include <iostream>
#include <fstream>

class Computer {
public:
    explicit Computer(double finalRating=0, std::list<Malware*> malwares={});
    //getters
    static int get_id();
    double get_final_rating() const;
    std::list<Malware*> get_malwares();
    [[nodiscard]] int get_unique_id()const;
    //setters
    void set_final_rating(double finalRating);
    void update_final_rating();
    void set_malwares(const std::list<Malware*>& malwares);
    //methods
    void add_malware(Malware* malware);
    //operators
    friend std::ostream& operator<<(std::ostream& out, const Computer& rhs);
    friend std::istream& operator>>(std::istream& in, Computer& rhs);
    friend std::ofstream& operator<<(std::ofstream& out, const Computer& rhs);
    ~Computer();
private:
    static int m_id;
    int m_unique_id {};
    double m_finalRating {};
    std::list<Malware*> m_malwares {};
};


#endif //MALWARE_TYPES_OOP_COMPUTER_H
