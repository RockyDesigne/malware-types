//
// Created by HORIA on 29.12.2023.
//

#ifndef MALWARE_TYPES_OOP_KEYLOGGER_H
#define MALWARE_TYPES_OOP_KEYLOGGER_H

#include "Malware.h"
#include <list>
#include <vector>

class Keylogger : virtual public Malware {
public:
    explicit Keylogger(double impactRating=0.0, int day=1, int month=1,int year=1970, std::string name="",
                       std::string infectionMethod="Unknown", std::list<std::string> modifiedRegisters={}, std::list<std::string> usedFunctions = {},
                       std::list<std::string> specialKeys={});
    //getters
    std::list<std::string> get_used_functions();
    std::list<std::string> get_special_keys();
    //setters
    void set_used_functions(const std::list<std::string>& usedFunctions);
    void set_special_keys(const std::list<std::string>& specialKeys);
    void afisare() override;
    void update_impact_rating() override;
    friend std::istream& operator>>(std::istream& in, Keylogger& obj);
private:
    std::list<std::string> m_usedFunctions {};
    std::list<std::string> m_specialKeys {};
};


#endif //MALWARE_TYPES_OOP_KEYLOGGER_H
