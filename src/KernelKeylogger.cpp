//
// Created by HORIA on 29.12.2023.
//

#include "KernelKeylogger.h"

#include <iostream>

KernelKeylogger::KernelKeylogger(double impactRating, int day, int month, int year, std::string name,
                                 std::string infectionMethod, std::list<std::string> modifiedRegisters,
                                 bool hidingFiles, bool hidingRegisters) : Malware{impactRating,day,month,year,std::move(name),std::move(infectionMethod),std::move(modifiedRegisters)},
                                                                           m_hidingFiles{hidingFiles}, m_hidingRegisters{hidingRegisters} {}

bool KernelKeylogger::get_hiding_files() const {return m_hidingFiles;}

bool KernelKeylogger::get_hiding_registers() const {return m_hidingRegisters;}

void KernelKeylogger::set_hiding_files(bool hidingFiles) {m_hidingFiles=hidingFiles;}

void KernelKeylogger::set_hiding_registers(bool hidingResgisters) {m_hidingRegisters=hidingResgisters;}

void KernelKeylogger::update_impact_rating() {
    RootKit::update_impact_rating();
    Keylogger::update_impact_rating();
    double val {Malware::check_for_vulnerable_registers()};
    val += RootKit::get_impact_rating() + Keylogger::get_impact_rating();
    if (m_hidingFiles) {val += 20;}
    if (m_hidingRegisters) {val += 30;}
    set_impact_rating(val);
}

void KernelKeylogger::afisare() {
    RootKit::afisare();
    Keylogger::afisare();
    std::cout << "Ascunde registri: ";
    if (m_hidingFiles) {std::cout << "Da\n";} else {std::cout << "Nu\n";}
    std::cout << "Ascunde Fisiere: ";
    if (m_hidingRegisters) {std::cout << "Da\n";} else {std::cout << "Nu\n";}
}

std::istream &operator>>(std::istream &in, KernelKeylogger &obj) {
    obj.read();

    return in;
}
