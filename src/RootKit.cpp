//
// Created by HORIA on 29.12.2023.
//

#include "RootKit.h"

#include <iostream>

RootKit::RootKit(double impactRating, int day, int month, int year, std::string name, std::string infectionMethod,
                 std::list <std::string> modifiedRegisters, std::list <std::string> importList,
                 std::list <std::string> significantStrings) : Malware{impactRating,day,month,year,std::move(name),std::move(infectionMethod),std::move(modifiedRegisters)},
                                                          m_importList{std::move(importList)}, m_significantStrings{std::move(significantStrings)} {}

std::list <std::string> RootKit::get_import_list() {return m_importList;}

std::list<std::string> RootKit::get_significant_strings() {return m_significantStrings;}

void RootKit::set_import_list(const std::list<std::string> &importList) {m_importList=importList;}

void RootKit::set_significant_strings(const std::list<std::string> &significantStrings) {m_significantStrings=significantStrings;}

void RootKit::update_impact_rating() {
    std::vector<std::string> susStrings {
            "System Service Descriptor Table",
            "SSDT",
            "NtCreateFile"
    };
    double val {Malware::check_for_vulnerable_registers()};
    std::vector<std::string> susImports {"ntoskrnl.exe"};
    val += Malware::calculateRating(0, m_significantStrings, susStrings,[](double add){return add+100;});
    val += Malware::calculateRating(val, m_importList, susImports,[](double add){return add*2;});
    set_impact_rating(val);
}

void RootKit::afisare() {
    Malware::afisare();
    std::cout << "A importat urmatoarele: ";
    auto print {[](std::string_view elem){std::cout << elem << ",";}};
    std::for_each(m_importList.begin(),m_importList.end(), print);
    std::cout << '\n';
    std::cout << "Are urmatoarele significant strings: ";
    std::for_each(m_significantStrings.begin(),m_significantStrings.end(),print);
    std::cout << '\n';
}

std::istream &operator>>(std::istream &in, RootKit &obj) {
    obj.read();
    std::cout << "Introduceti lista de imports: ";
    std::string line;
    std::getline(in,line);
    std::string delim {" "};
    Malware::tokenize(line,obj.m_importList,delim);
    std::cout << "\nIntroduceti lista de significant strings: ";
    std::getline(in,line);
    Malware::tokenize(line,obj.m_significantStrings,delim);
    std::cout << "\n";
    return in;
}
